name: "Main"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  style-check:
    name: "Style Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3

      - name: Install node.js
        run: sudo apt install nodejs npm

      - name: npm install
        run: npm install

      - name: Terraform Format
        run: terraform fmt -check -recursive
        working-directory: terraform

      - name: Lint:CSS
        run: npm run lint:css

      - name: Lint:ES
        run: npm run lint:es

  test:
    name: "Test"
    runs-on: ubuntu-latest
    env:
      TEST_FIREBASE_ACCOUNT_UID: ${{ secrets.TEST_FIREBASE_ACCOUNT_UID }}
      REACT_APP_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      REACT_APP_FIREBASE_SENDER_ID: ${{ secrets.FIREBASE_SENDER_ID }}
      REACT_APP_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
#      REACT_APP_HASURA_URL: ${{ secrets.HASURA_URL }}
      REACT_APP_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3

      - name: Install node.js
        run: sudo apt install nodejs npm

      - name: Install packages
        run: npm install

      - name: Start
        run: |
          npm install -g wait-on
          npm run start & wait-on http://localhost:3000

      - name: Setup env
        run: |
          python -c 'import json, os; print(json.dumps({k: os.environ[k] for k in ["TEST_FIREBASE_ACCOUNT_UID","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","REACT_APP_FIREBASE_SENDER_ID","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_MEASUREMENT_ID"]}))' > cypress.env.json
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" > serviceAccount.json

      - name: e2e
        run: npm run e2e

      - name: unit
        run: npm run test

  terraform:
    name: "Terraform"
    uses: ./.github/workflows/terraform.yml
    with:
      env: production
      only_plan: ${{ !(github.ref == 'refs/heads/master' && github.event_name == 'push') }}
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
      CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_SENDER_ID: ${{ secrets.FIREBASE_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      HASURA_URL: ${{ secrets.HASURA_URL }}
      GTM_CONTAINER: ${{ secrets.GTM_CONTAINER }}
