name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        default: 'test'
        required: true

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    environment: ${{ inputs.env || 'production' }}
    concurrency: ${{ inputs.env || 'production' }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      env: ${{ inputs.env || 'production' }}
      TF_VAR_env: ${{ inputs.env || 'production' }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_cloudflare_email: ${{ secrets.CLOUDFLARE_EMAIL }}
      TF_VAR_cloudflare_api_key: ${{ secrets.CLOUDFLARE_API_KEY }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        uses: ./.github/workflows/build
        with:
          env: ${{ env.env }}
          firebase_api_key: ${{ secrets.FIREBASE_API_KEY }}
          firebase_auth_domain: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          firebase_project_id: ${{ secrets.FIREBASE_PROJECT_ID }}
          firebase_storage_bucket: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          firebase_sender_id: ${{ secrets.FIREBASE_SENDER_ID }}
          firebase_app_id: ${{ secrets.FIREBASE_APP_ID }}
          firebase_measurement_id: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          hasura_url: ${{ secrets.HASURA_URL }}
          gtm_container: ${{ secrets.GTM_CONTAINER }}

      - uses: actions/download-artifact@master
        with:
          name: build
          path: terraform/build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend-${{ env.env }}.hcl -reconfigure
        working-directory: terraform

      - name: Terraform Apply
        id: apply
        if: "!inputs.only_plan"
        run: terraform apply -auto-approve
        working-directory: terraform
