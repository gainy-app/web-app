name: Terraform Test

on:
  pull_request:

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      env: ${{ inputs.env }}
    secrets:
      FIREBASE_API_KEY: "${{ secrets.FIREBASE_API_KEY }}"
      FIREBASE_AUTH_DOMAIN: "${{ secrets.FIREBASE_AUTH_DOMAIN }}"
      FIREBASE_PROJECT_ID: "${{ secrets.FIREBASE_PROJECT_ID }}"
      FIREBASE_STORAGE_BUCKET: "${{ secrets.FIREBASE_STORAGE_BUCKET }}"
      FIREBASE_SENDER_ID: "${{ secrets.FIREBASE_SENDER_ID }}"
      FIREBASE_APP_ID: "${{ secrets.FIREBASE_APP_ID }}"
      FIREBASE_MEASUREMENT_ID: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
      HASURA_URL: "${{ secrets.HASURA_URL }}"
      GTM_CONTAINER: "${{ secrets.GTM_CONTAINER }}"

  test:
    name: "Test"
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VAR_env: ${{ inputs.env }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_cloudflare_email: ${{ secrets.CLOUDFLARE_EMAIL }}
      TF_VAR_cloudflare_api_key: ${{ secrets.CLOUDFLARE_API_KEY }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: terraform

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend-${{ env.TF_VAR_env }}.hcl -reconfigure
        working-directory: terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform

      - uses: actions/download-artifact@master
        with:
          name: build
          path: terraform/build

      - name: Terraform Plan
        id: plan
        if: inputs.only_plan
        run: terraform plan -no-color -lock=false
        working-directory: terraform

